{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAKtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPT,EAAKC,KAAKgB,iBAAiB,UAgB3B,SAAkBC,GAChBA,EAAEC,iBAEF,IAAMC,EAAeC,SAASrB,EAAKI,WAAWkB,OACxCC,EAAOF,SAASrB,EAAKK,UAAUiB,OAC/BE,EAASH,SAASrB,EAAKM,YAAYgB,OAErCG,EAAQL,EAEZ,GAAIA,GAAgB,GAAKG,GAAQ,GAAKC,GAAU,EAC9CE,EAAA5B,GAAS6B,OAAOC,QAAQ,0CAEtB,IAAG,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAC3BtB,EAAcsB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBiB,EAAA5B,GAAS6B,OAAOK,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAH,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBiB,EAAA5B,GAAS6B,OAAOC,QACd,sBAAqCK,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAIjDgB,GAASF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const initialDelay = parseInt(refs.inputDelay.value);\n  const step = parseInt(refs.inputStep.value);\n  const amount = parseInt(refs.inputAmount.value);\n\n  let delay = initialDelay;\n\n  if (initialDelay <= 0 || step <= 0 || amount <= 0) {\n    Notiflix.Notify.failure('❌ Enter a value bigger than zero!');\n  } else {\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n\n      delay += step;\n    }\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","initialDelay","parseInt","value","step","amount","delay1","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.44840e4c.js.map"}